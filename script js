document.addEventListener("DOMContentLoaded", function () {
    // Handle "Book" and "Review" Buttons
    document.querySelectorAll(".booking").forEach(button => {
        button.addEventListener("click", function () {
            window.location.href = "#tourForm"; // Scrolls to booking form
        });
    });

    document.querySelectorAll(".user-review").forEach(button => {
        button.addEventListener("click", function () {
            window.location.href = "#review-form"; // Scrolls to review form
        });
    });

    // Search bar functionality
    function searchDestination() {
        let searchInput = document.querySelector(".search-bar").value.trim().toLowerCase();
        fetch("http://localhost:3000/destinations")
        .then(response => response.json())
        .then(destinations => {
            let destinationNames = destinations.map(dest => dest.name.toLowerCase());

            if (destinationNames.includes(searchInput)) {
                alert(`We have tours to ${searchInput.charAt(0).toUpperCase() + searchInput.slice(1)}! Click 'Book' to reserve your spot.`);
            } else {
                alert("Sorry, we donâ€™t offer services there yet. Continue exploring!");
            }
        })
        .catch(error => {
            console.error("Error fetching destinations:", error);
            alert("Could not check destinations. Try again later.");
        });
    }

    // Attach event listeners to search
    document.querySelector(".search-btn").addEventListener("click", searchDestination);
    document.querySelector(".search-bar").addEventListener("keypress", function (event) {
        if (event.key === "Enter") {
            event.preventDefault();
            searchDestination();
        }
    });

    // Booking Form Submission
    document.getElementById("tourForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent page reload
    
        // Get form values
        const name = document.getElementById("name").value;
        const email = document.getElementById("email").value;
        const destination = document.getElementById("destination").value;
        const date = document.getElementById("date").value;
        const people = document.getElementById("people").value;
    
        // Fetch available destinations and check if it exists
        fetch("http://localhost:3000/destinations")
            .then(response => response.json())
            .then(destinations => {
                const foundDestination = destinations.find(d => d.name.toLowerCase() === destination.toLowerCase());
    
                if (!foundDestination) {
                    alert("We currently don't offer tours to this destination. We will contact you if we add it.");
                    return;
                }
    
                document.getElementById("price").value = `${foundDestination.price}`; // Show price
    
                // Checking if user already exists
                return fetch("http://localhost:3000/users")
                    .then(response => response.json())
                    .then(users => {
                        let existingUser = users.find(user => user.email === email);
                        
                        if (existingUser) {
                            return existingUser.id; 
                        } else {
                            return fetch("http://localhost:3000/users", {
                                method: "POST",
                                headers: { "Content-Type": "application/json" },
                                body: JSON.stringify({ name, email })
                            })
                            .then(response => response.json())
                            .then(newUser => newUser.id);
                        }
                    })
                    .then(userId => {
                        // Saves the booking with the user ID
                        const bookingData = {
                            userId, 
                            destination,
                            date,
                            people,
                            price: foundDestination.price
                        };
    
                        return fetch("http://localhost:3000/bookings", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(bookingData)
                        });
                    });
            })
            .then(response => response.json())
            .then(() => {
                alert("Booking successful!");
                document.getElementById("tourForm").reset(); // Clear form
            })
            .catch(error => console.error("Error booking the tour:", error));
    });

    // Review Form Submission
    document.getElementById("reviewForm").addEventListener("submit", function (event) {
        event.preventDefault();

        // Get form values
        const name = document.getElementById("reviewerName").value;
        const destination = document.getElementById("destinationReview").value;
        const text = document.getElementById("reviewText").value;
        const rating = document.getElementById("reviewRating").value;

        // Build review object
        const reviewData = {
            name,
            destination,
            text,
            rating: parseInt(rating)
        };

        // Send review to the database
        fetch("http://localhost:3000/reviews", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(reviewData)
        })
        .then(response => response.json())
        .then(() => {
            alert("Review submitted successfully!");
            document.getElementById("reviewForm").reset();
            loadReviews(); // Reload reviews
        })
        .catch(error => console.error("Error submitting review:", error));
    });

    // Load Reviews Function (Add this to prevent errors)
    function loadReviews() {
        fetch("http://localhost:3000/reviews")
            .then(response => response.json())
            .then(reviews => {
                console.log("Reviews loaded:", reviews);
            })
            .catch(error => console.error("Error loading reviews:", error));
    }
});

