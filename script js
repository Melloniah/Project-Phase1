document.addEventListener("DOMContentLoaded", function () {
    // Handle Scroll Buttons
    document.querySelectorAll(".booking").forEach(button => {
        button.addEventListener("click", () => {
            window.location.href = "#tourForm";
        });
    });

    document.querySelectorAll(".user-review").forEach(button => {
        button.addEventListener("click", () => {
            window.location.href = "#reviewForm";
            loadReviews(); // Load and display reviews when user clicks "Review Us"
        });
    });

    // Search Functionality
    const searchButton = document.querySelector(".search-btn");
    const searchBar = document.querySelector(".search-bar");

    function searchDestination() {
        const searchInput = searchBar.value.trim().toLowerCase();

        if (!searchInput) {
            alert("Please enter a destination to search.");
            return;
        }

        fetch("http://localhost:3000/destinations")
            .then(res => res.json())
            .then(destinations => {
                const found = destinations.find(dest => dest.name.toLowerCase().includes(searchInput));
                if (found) {
                    alert(`We have tours to ${found.name}! Click 'Book' to reserve your spot.`);
                } else {
                    alert("Sorry, we don’t offer services there yet. Please continue searching!");
                }
            })
            .catch(err => {
                console.error("Error fetching destinations:", err);
                alert("Could not check destinations. Try again later.");
            });
    }

    if (searchButton) {
        searchButton.addEventListener("click", searchDestination);
    }

    if (searchBar) {
        searchBar.addEventListener("keypress", event => {
            if (event.key === "Enter") {
                event.preventDefault();
                searchDestination();
            }
        });
    }

    // Auto Update Price on Destination Input
    fetch("http://localhost:3000/destinations")
        .then(res => res.json())
        .then(destinations => {
            const destinationInput = document.getElementById("destination");
            const priceInput = document.getElementById("price");

            if (destinationInput && priceInput) {
                destinationInput.addEventListener("input", () => {
                    const input = destinationInput.value.trim().toLowerCase();
                    const match = destinations.find(dest => dest.name.toLowerCase() === input);

                    priceInput.value = match ? match.price : "Price not available";
                });
            }
        })
        .catch(err => console.error("Error fetching destinations:", err));

    // Tour Booking Submission
    const tourForm = document.getElementById("tourForm");

    if (tourForm) {
        tourForm.addEventListener("submit", function (event) {
            event.preventDefault();

            const name = document.getElementById("name").value.trim();
            const email = document.getElementById("email").value.trim();
            const destination = document.getElementById("destination").value.trim();
            const date = document.getElementById("date").value;
            const people = document.getElementById("people").value;
            const price = document.getElementById("price").value.replace("$", "").trim();

            if (!price || price === "Price not available") {
                alert("Invalid destination. Please enter a valid destination.");
                return;
            }

            fetch("http://localhost:3000/users")
                .then(res => res.json())
                .then(users => {
                    const existingUser = users.find(user => user.email === email);
                    if (existingUser) return existingUser.id;

                    return fetch("http://localhost:3000/users", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ name, email })
                    })
                        .then(res => res.json())
                        .then(newUser => newUser.id);
                })
                .then(userId => {
                    return fetch("http://localhost:3000/bookings", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ userId, destination, date, people, price })
                    }).then(() => userId);
                })
                .then(userId => {
                    return fetch(`http://localhost:3000/users/${userId}`, {
                        method: "PATCH",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ lastBookedDestination: destination })
                    });
                })
                .then(() => {
                    alert("Booking successful!");
                    tourForm.reset();
                })
                .catch(err => console.error("Error booking the tour:", err));
        });
    }

    // Review Submission
    const reviewForm = document.getElementById("review-form");

    if (reviewForm) {
        reviewForm.addEventListener("submit", function (event) {
            event.preventDefault();
            console.log("Review form submitted");
            const name = document.getElementById("reviewerName").value.trim();
            const destination = document.getElementById("destinationReview").value.trim();
            const text = document.getElementById("reviewText").value.trim();
            const rating = parseInt(document.getElementById("reviewRating").value);

            if (!name || !destination || !text || isNaN(rating)) {
                alert("Please fill in all fields correctly.");
                return;
            }

            const reviewData = { name, destination, text, rating };

            fetch("http://localhost:3000/reviews", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(reviewData)
            })
                .then(res => res.json())
                .then(() => {
                    alert("Review submitted successfully!");
                    reviewForm.reset();
                    loadReviews(); // Reload reviews after submission
                })
                .catch(err => console.error("Error submitting review:", err));
        });
    }

    // Contact Form Submission
    const contactForm = document.getElementById("contact-form");

    if (contactForm) {
        contactForm.addEventListener("submit", function (event) {
            event.preventDefault();
            alert("Your message is received!");
            contactForm.reset();
        });
    }
});

// Load Reviews Function
function loadReviews() {
    fetch("http://localhost:3000/reviews")
        .then(response => response.json())
        .then(reviews => {
            const reviewList = document.getElementById("review-list");
            reviewList.innerHTML = ""; // Clear previous entries

            if (reviews.length === 0) {
                reviewList.innerHTML = "<li>No reviews yet. Be the first to share!</li>";
                return;
            }

            reviews.forEach(review => {
                const li = document.createElement("li");
                li.innerHTML = `
                    <strong>${review.name}</strong> (Destination: ${review.destination})<br/>
                    "${review.text}"<br/>
                    ⭐ Rating: ${review.rating}/5
                    <hr/>
                `;
                reviewList.appendChild(li);
            });
        })
        .catch(error => console.error("Error loading reviews:", error));
}
