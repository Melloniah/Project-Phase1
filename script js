document.addEventListener("DOMContentLoaded", function () {
    // Handle "Book" and "Review" Buttons
    document.querySelectorAll(".booking").forEach(button => {
        button.addEventListener("click", function () {
            window.location.href = "#tourForm"; // Scroll to booking form
        });
    });

    document.querySelectorAll(".user-review").forEach(button => {
        button.addEventListener("click", function () {
            window.location.href = "#reviewForm"; // Scroll to review form
        });
    });

    // Search bar functionality
    function searchDestination() {
        let searchInput = document.querySelector(".search-bar").value.trim().toLowerCase();
        fetch("http://localhost:3000/destinations") // Fetch from JSON Server
        .then(response => response.json())
        .then(destinations => {
            let destinationNames = destinations.map(dest => dest.name.toLowerCase());

            if (destinationNames.includes(searchInput)) {
                alert(`We have tours to ${searchInput[0].toUpperCase() + searchInput.slice(1)}! Click 'Book' to reserve your spot.`);
            } else {
                alert("Sorry, we don’t offer services there yet. Continue exploring!");
            }
        })
        .catch(error => {
            console.error("Error fetching destinations:", error);
            alert("Could not check destinations. Try again later.");
        });
    }

    // Attach event listeners to search
    document.querySelector(".search-btn").addEventListener("click", searchDestination);
    document.querySelector(".search-bar").addEventListener("keypress", function (event) {
        if (event.key === "Enter") {
            event.preventDefault();
            searchDestination();
        }
    });

    // Fetch destinations and update price when user selects a destination
    fetch("http://localhost:3000/destinations")
        .then(response => response.json())
        .then(destinations => {
            const destinationInput = document.getElementById("destination");
            const priceInput = document.getElementById("price");

            destinationInput.addEventListener("input", function () {
                const userInput = this.value.trim().toLowerCase();
                const foundDestination = destinations.find(dest => dest.name.toLowerCase() === userInput);

                if (foundDestination) {
                    priceInput.value = `${foundDestination.price}`; // Update price immediately
                } else {
                    priceInput.value = "Price not available";
                }
            });
        })
        .catch(error => console.error("Error fetching destinations:", error));

    // Booking Form Submission
    document.getElementById("tourForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent page reload
    
        // Get form values
        const name = document.getElementById("name").value;
        const email = document.getElementById("email").value;
        const destination = document.getElementById("destination").value;
        const date = document.getElementById("date").value;
        const people = document.getElementById("people").value;
        const price = document.getElementById("price").value.replace("$", ""); // Remove "$"

        // Validate destination before proceeding
        if (!price || price === "Price not available") {
            alert("Invalid destination. Please enter a valid destination.");
            return;
        }

        // Check if the user already exists
        fetch("http://localhost:3000/users")
            .then(response => response.json())
            .then(users => {
                let existingUser = users.find(user => user.email === email);

                if (existingUser) {
                    return existingUser.id; // Use existing user ID
                } else {
                    // Create new user
                    return fetch("http://localhost:3000/users", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ name, email })
                    })
                    .then(response => response.json())
                    .then(newUser => newUser.id); // Return new user's ID
                }
            })
            .then(userId => {
                // Save the booking
                return fetch("http://localhost:3000/bookings", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ userId, destination, date, people, price })
                }).then(response => response.json()).then(() => userId);
            })
            .then(userId => {
                // Update user's booking details
                fetch(`http://localhost:3000/users/${userId}`, {
                    method: "PATCH",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ lastBookedDestination: destination })
                });
            })
            .then(() => {
                alert("Booking successful!");
                document.getElementById("tourForm").reset(); // Clear form
            })
            .catch(error => console.error("Error booking the tour:", error));
    });

    // Review Form Submission
    document.addEventListener("DOMContentLoaded", function () {
        const reviewForm = document.getElementById("review-form");
    
        if (reviewForm) {
            reviewForm.addEventListener("submit", function (event) {
                event.preventDefault();
    
                const nameField = document.getElementById("reviewerName");
                const destinationField = document.getElementById("destinationReview");
                const textField = document.getElementById("reviewText");
                const ratingField = document.getElementById("reviewRating");
    
                // Check if all fields exist
                if (!nameField || !destinationField || !textField || !ratingField) {
                    console.error("One or more review form fields are missing.");
                    return;
                }
    
                // Get input values
                const name = nameField.value.trim();
                const destination = destinationField.value.trim();
                const text = textField.value.trim();
                const rating = parseInt(ratingField.value);
    
                // Ensure all required values are provided
                if (!name || !destination || !text || isNaN(rating)) {
                    alert("Please fill in all fields correctly.");
                    return;
                }
    
                // ✅ Define reviewData before using it
                const reviewData = {
                    name,
                    destination,
                    text,
                    rating
                };
    
                // Send review to the database
                fetch("http://localhost:3000/reviews", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(reviewData)
                })
                .then(response => response.json())
                .then(() => {
                    alert("Review submitted successfully!");
                    reviewForm.reset(); // Clear form after submission
                    loadReviews(); // Reload reviews if function exists
                })
                .catch(error => console.error("Error submitting review:", error));
            });
        }
    });
}); 
